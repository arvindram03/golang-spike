#!/bin/bash

function _print_download()
{
  echo "To make this script work, you need to download upload.py from:"
  echo "http://code.google.com/p/rietveld/wiki/UploadPyUsage"
  echo "Copy the file to your path, and chmod to make it executable."
  exit 1
}

if [ "$(which upload.py)" == "" ]; then
  _print_download
fi

# if user specified --rev, we're not adding the default one
rev="--rev master"
rev_param="master"
rev_param_is_next=false
for i in $* ; do
  if [ "$rev_param_is_next" == "true" ]; then
    rev_param=$i
    rev_param_is_next=false
  else
    if [ "$i" == "--rev" ]; then
      rev=""
      rev_param_is_next=true
    fi
  fi
done

# Build the message automatically from the git log.
# the rev_param will be just the original branch / change, or a set of
# two changes separated by ':'. For git log, we'll need both separated
# by '..'
if ! ( echo $rev_param | grep : ) ; then
  rev_param=${rev_param}:
fi
git_log=`echo $rev_param | sed -n 's/:/../p'`
git log --pretty=oneline --abbrev-commit $git_log > /tmp/createcl.msg
echo "----- Full commit log:" >> /tmp/createcl.msg
git log $git_log | sed 's_commit \(.*\)_commit https://github.com/youtube/vitess/commit/\1_' >> /tmp/createcl.msg

echo "Visit https://accounts.google.com/b/0/IssuedAuthSubTokens to generate an app specific password."
upload.py $rev -y -s codereview.appspot.com -e ${USER}@google.com --cc yt-vt-issues@google.com --send_mail -F /tmp/createcl.msg $*
